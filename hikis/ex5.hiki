!Ex5 method
!!Ex5_1 三角形の面積(TriangleArea)
底辺と高さを引数として,面積を返す関数areaを作れ. 
<<<
def area(a,h)
  a*h/2.0
end

puts area(2.0,3.0)
>>>

!!Ex5_2:prime2(prime_number?)
前章の課題で求めた素数判定プログラムをmethodにせよ．駆動部は
<<<
a = gets.chomp.to_i
puts a
if prime?(a) then
  print  a,” is a prime number.\n”  
else
  print  a,” is not a prime number.\n”
end
>>>
つまり，素数ならtrue, なければfalseをprime_number?は返す．

!!Ex5_3:距離関数(Distance)

二つの位置座標
<<<
x1=[0.0, 0.0]
x2=[1.0, 1.0]
>>>
から距離を求めるmy_distance関数を作れ.

ヒント：数値の二乗根(square root)をかえす関数(Math::sqrt)は，
<<<
puts Math::sqrt(2.0)
>>>


!!Ex5_4:ルートに沿った総延長(DistanceSum)
4つの位置座標 
<<<
city=[[0.0, 0.0],
[1.0, 1.0],
[1.0, 0.0],
[0.0, 1.0]]
>>>
を読み込んで,座標順にroute=[0,1,2,3,0]と巡る距離を求めよ.
<<<
ruby ex5-3.rb
1.4142135623731
4.82842712474619
>>>

先ほどのroute, cityを受け取って，総延長を返す関数DistanceSumを作れ．
